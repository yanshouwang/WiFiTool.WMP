"use strict";
var wifis = [];
var wifi = {
    BSSID: "",
    SSID: "",
    secure: false,
    signalStrength: 0
};
var auto = "自动";
var manual = "手动";
Page({
    data: {
        device: {},
        type: "wifi",
        wifis: wifis,
        wifi: wifi,
        password: "",
        modes: [
            auto,
            manual
        ],
        ip: {
            mode: auto,
            address: "",
            mask: "",
            gateway: "",
        },
        dns: {
            mode: auto,
            values: []
        }
    },
    onLoad: function () {
        var _this = this;
        wx.onGetWifiList(function (res) { return _this.onGetWiFiList(res); });
        this.startWiFi();
    },
    onReady: function () {
    },
    onShow: function () {
    },
    onHide: function () {
    },
    onUnload: function () {
        this.stopWiFi();
    },
    onPullDownRefresh: function () {
    },
    onReachBottom: function () {
    },
    onShareAppMessage: function (opts) {
        console.log(opts.target);
        return {};
    },
    onGetWiFiList: function (res) {
        var wifis = res.wifiList;
        var wifi = this.data.wifi;
        if (wifi.SSID !== "") {
            wifis.unshift(wifi);
        }
        wifis = this.distinct(res.wifiList).sort(function (w1, w2) { return w1.SSID.localeCompare(w2.SSID); });
        console.log(wifis);
        var data = { wifis: wifis };
        this.setData(data);
    },
    onTapSSID: function () {
        var _this = this;
        var option1 = {
            success: function (res) {
                console.log("\u83B7\u53D6\u7CFB\u7EDF\u4FE1\u606F\u6210\u529F\uFF1A" + res);
                if (res.platform === "ios") {
                    var option2 = {
                        title: "提示",
                        content: "由于系统限制，iOS 用户请手动进入系统 WiFi 页面，当列表中出现目标 WiFi 时再返回小程序。",
                        showCancel: false,
                        success: function (res) {
                            console.log("提示框弹出成功");
                            if (res.confirm) {
                                _this.navigateToWiFi();
                            }
                        },
                        fail: function (res) { return console.log("\u63D0\u793A\u7A97\u5F39\u51FA\u5931\u8D25\uFF1A" + res.errMsg); }
                    };
                    wx.showModal(option2);
                }
                else {
                    _this.navigateToWiFi();
                }
            },
            fail: function (res) { return console.log("\u83B7\u53D6\u7CFB\u7EDF\u4FE1\u606F\u5931\u8D25\uFF1A" + res.errMsg); }
        };
        wx.getSystemInfo(option1);
    },
    onIPModeChange: function (e) {
        var number = e.detail.value;
        var mode = this.data.modes[number];
        var data = {};
        data["ip.mode"] = mode;
        this.setData(data);
    },
    onDNSModeChange: function () {
    },
    navigateToWiFi: function () {
        var wifi = this.data.wifi;
        var option = {
            url: "../wifi/wifi",
            success: function (res) {
                console.log("跳转 WiFi 页面成功");
                res.eventChannel.emit("wifi", wifi);
            },
            fail: function (res) { return console.log("\u8DF3\u8F6C WiFi \u9875\u9762\u5931\u8D25\uFF1A" + res.errMsg); }
        };
        wx.navigateTo(option);
    },
    onWiFiChange: function (e) {
        var number = e.detail.value;
        var ssid = this.data.wifis[number].SSID;
        var data = { "ssid": ssid };
        this.setData(data);
    },
    distinct: function (arr) {
        var res = [];
        arr.forEach(function (w1) {
            var some = res.some(function (w2) { return w1.SSID === w2.SSID; });
            if (some) {
                return;
            }
            res.push(w1);
        });
        return res;
    },
    onSubmit: function () {
    },
    startWiFi: function () {
        var _this = this;
        var option = {
            success: function () {
                console.log("打开 WiFi 模块成功");
                _this.getConnectedWiFi();
            },
            fail: function (res) { return console.log("\u6253\u5F00 WiFi \u6A21\u5757\u5931\u8D25\uFF1A" + res.errCode + " - " + res.errMsg); }
        };
        wx.startWifi(option);
    },
    stopWiFi: function () {
        var option = {
            success: function () { return console.log("关闭 WiFi 模块成功"); },
            fail: function (res) { return console.log("\u5173\u95ED WiFi \u6A21\u5757\u5931\u8D25\uFF1A" + res.errCode + " - " + res.errMsg); }
        };
        wx.stopWifi(option);
    },
    getConnectedWiFi: function () {
        var _this = this;
        var option = {
            success: function (res) {
                var wifi = res.wifi;
                console.log("\u83B7\u53D6\u5DF2\u8FDE\u63A5 WiFi \u6210\u529F: " + wifi);
                var data = { "wifis": [wifi], "ssid": wifi.SSID };
                _this.setData(data);
            },
            fail: function (res) { return console.log("\u83B7\u53D6\u5DF2\u8FDE\u63A5 WiFi \u5931\u8D25: " + res.errCode + " - " + res.errMsg); }
        };
        wx.getConnectedWifi(option);
    },
    getWiFiList: function () {
        var _this = this;
        var option1 = {
            success: function (res) {
                console.log("\u83B7\u53D6\u8BBE\u7F6E\u6210\u529F\uFF1A" + res.authSetting);
                if (res.authSetting["scope.userLocation"]) {
                    var option2 = {
                        success: function () { return console.log("\u83B7\u53D6 WiFi \u5217\u8868\u6210\u529F"); },
                        fail: function (res) { return console.log("\u83B7\u53D6 WiFi \u5217\u8868\u5931\u8D25\uFF1A" + res.errCode + " - " + res.errMsg); }
                    };
                    wx.getWifiList(option2);
                }
                else {
                    _this.authorize();
                }
            },
            fail: function (res) { return console.log("\u83B7\u53D6\u8BBE\u7F6E\u5931\u8D25\uFF1A" + res.errMsg); }
        };
        wx.getSetting(option1);
    },
    authorize: function () {
        var _this = this;
        var option = {
            scope: "scope.userLocation",
            success: function () {
                console.log("申请权限成功");
                _this.getWiFiList();
            },
            fail: function (res) { return console.log("\u7533\u8BF7\u6743\u9650\u5931\u8D25\uFF1A" + res.errMsg); }
        };
        wx.authorize(option);
    },
});
//# sourceMappingURL=data:application/json;base64,