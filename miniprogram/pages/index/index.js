"use strict";
var serviceId = "6E400001-B5A3-F393-E0A9-E50E24DCCA9E";
function inArray(arr, key, val) {
    for (var i = 0; i < arr.length; i++) {
        if (arr[i][key] === val) {
            return i;
        }
    }
    return -1;
}
var obj = [];
var hide = false;
Page({
    data: {
        available: true,
        discovering: false,
        devices: obj
    },
    onLoad: function () {
        var _this = this;
        console.log("index: onLoad");
        wx.onBluetoothAdapterStateChange(function (res) { return _this.onAdapterStateChange(res); });
        wx.onBluetoothDeviceFound(function (res) { return _this.onDeviceFound(res); });
        this.openAdapter();
    },
    onReady: function () {
        console.log("index: onReady");
    },
    onShow: function () {
        console.log("index: onShow");
        hide = false;
        if (this.data.available && !this.data.discovering) {
            this.startDiscovery();
        }
    },
    onHide: function () {
        console.log("index: onHide");
        hide = true;
        if (this.data.available && this.data.discovering) {
            this.stopDiscovery();
        }
    },
    onUnload: function () {
        console.log("index: onUnload");
        this.closeAdapter();
    },
    onPullDownRefresh: function () {
        var data = {};
        data["devices"] = [];
        this.setData(data);
        wx.stopPullDownRefresh();
    },
    onTapDevice: function (e) {
        var i = e.currentTarget.id;
        var device = this.data.devices[i];
        var option = {
            url: "../device/device",
            success: function (res) { return res.eventChannel.emit("device", device); }
        };
        wx.navigateTo(option);
    },
    onAdapterStateChange: function (res) {
        console.log("\u84DD\u7259\u9002\u914D\u5668\u72B6\u6001\u6539\u53D8\uFF1A" + res.available + " - " + res.discovering);
        var data = {
            "available": res.available,
            "discovering": res.discovering
        };
        this.setData(data);
        if (res.available) {
            if (hide && res.discovering) {
                this.stopDiscovery();
            }
            else if (!hide && !res.discovering) {
                this.startDiscovery();
            }
        }
    },
    onDeviceFound: function (res) {
        var _this = this;
        res.devices.forEach(function (device) {
            var data = {};
            var i = inArray(_this.data.devices, 'deviceId', device.deviceId);
            if (i === -1) {
                console.log("\u53D1\u73B0\u8BBE\u5907\uFF1A" + JSON.stringify(device));
                var length = _this.data.devices.length;
                data["devices[" + length + "]"] = device;
            }
            else {
                data["devices[" + i + "]"] = device;
            }
            _this.setData(data);
        });
    },
    openAdapter: function () {
        var _this = this;
        var option = {
            success: function () {
                console.log("打开蓝牙模块成功");
                _this.onAdapterOpen();
            },
            fail: function (res) { return console.log("\u6253\u5F00\u84DD\u7259\u6A21\u5757\u5931\u8D25\uFF1A" + res.errCode + " - " + res.errMsg); }
        };
        wx.openBluetoothAdapter(option);
    },
    onAdapterOpen: function () {
        var _this = this;
        var option1 = {
            success: function (res) {
                console.log("\u83B7\u53D6\u84DD\u7259\u9002\u914D\u5668\u72B6\u6001\u6210\u529F\uFF1A" + res.available + " - " + res.discovering);
                _this.onAdapterStateChange(res);
            },
            fail: function (res) { return console.log("\u83B7\u53D6\u84DD\u7259\u9002\u914D\u5668\u72B6\u6001\u5931\u8D25\uFF1A" + res.errCode + " - " + res.errMsg); }
        };
        wx.getBluetoothAdapterState(option1);
    },
    closeAdapter: function () {
        var option = {
            success: function () { return console.log("关闭蓝牙模块成功"); },
            fail: function (res) { return console.log("\u5173\u95ED\u84DD\u7259\u6A21\u5757\u5931\u8D25\uFF1A" + res.errCode + " - " + res.errMsg); }
        };
        wx.closeBluetoothAdapter(option);
    },
    startDiscovery: function () {
        var option = {
            allowDuplicatesKey: true,
            services: [serviceId],
            success: function () { return console.log("开始扫描成功"); },
            fail: function (res) { return console.log("\u5F00\u59CB\u626B\u63CF\u5931\u8D25\uFF1A" + res.errCode + " - " + res.errMsg); }
        };
        wx.startBluetoothDevicesDiscovery(option);
    },
    stopDiscovery: function () {
        var option = {
            success: function () { return console.log("停止扫描成功"); },
            fail: function (res) { return console.log("\u505C\u6B62\u626B\u63CF\u5931\u8D25\uFF1A" + res.errCode + " - " + res.errMsg); }
        };
        wx.stopBluetoothDevicesDiscovery(option);
    }
});
//# sourceMappingURL=data:application/json;base64,